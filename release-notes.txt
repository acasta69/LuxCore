### Release v2.4

### New Features

* New OpenCL code to evaluate textures and materials. It doesn't require kernel re-compilation anymore
* LuxCoreUI "Fill kernel cache" menu option now pre-compile all possible GPU kernels
* LuxCore API KernelCacheFill() is now available for Python
* New 2-levels Env. Light Visibility Cache (ELVC)
* Added the support for a new ".sharpness" (default value 0.1, range [0.0, 1.0]) Intel OIDN parameter to blend original and denoised output
* Removed LuxRays support for virtual devices and hybrid rendering (old LuxRender GPU doing ray intersections and CPU everything else)
* Geometry vertex and triangle AOVs (arbitrary data associated to mesh vertices and triangle usable by textures)
* Removed the support for Triplanar texture .uvindex (side effect of the above new feature)
* New hitpointvertexaov and hitpointtriangleaov textures
* Pointiness shape can now assign curvature values to vertex AOV with .aovindex property (a 4294967296 value will force the use of alpha channel instead, default value for compatibility with the past)
* LuxCore API has now SetMeshVertexAOV() and SetMeshTriangleAOV() methods to set geometry vertex and triangle AOV
* Added the support for new Random texture
* Added the support for the new IslandAOV shape
* Added the support for RandomTriangleAOV shape
* Accelerated duplicate vertex detection in pointiness shape (from 6.7 seconds to 0.016 seconds on a 100k vertex mesh)
* LuxRays API reworked to support generic hardware devices (now OpenCL, potentially CUDA, Vulkan, Metal, etc.)
* Added the support for light groups to PhotonGI
* New LuxCore API RenderConfig::HasCachedKernels() method to check if a (long) kernel compilation time is required
* Glossycoating material on GPUs now supports bump mapping exactly like CPU version (issue #307)
* Mix material on GPUs now supports bump mapping exactly like CPU version (issue #307)
* Added processor group support to enable LuxCoreRender to use more than 64 logical processors on Windows
* Added the support for CUDA rendering
* Added the support for out of core CUDA rendering (i.e. to render scenes larger than GPU ram available)
* GPU rendering now uses 64bit image map pixel indices (i.e. removed the limit of 8 * 4GB of scene image maps)
* New cache and out-of-core friendly mode for Random/Sobol samplers
* Added the support for denoising baked light maps with Intel ODIN
* pyluxcoretools merge now supports saving film AOVs via new --aov-output option
* New improved Metropolis sampler warmup period
* Added thin film interference option for many materials
* Added the support for a new color re-mapping image pipeline plug-in using .cube files (issue #81)
* LuxCore API now support unicode UTF-8 strings and files
* luxcore::KernelCacheFill() now supports opencl.devices.select, scene.epsilon.min and scene.epsilon.max properties (issue #374)
* LuxCoreRender can now be compiled without OpenCL/CUDA SDK and it will load OpenCL/CUDA at run time (one executable can now be used for all types of installations)
* RTPathOCLRenderEngine::WaitNewFrame() takes is not more synchronous with rendering refresh
* The use of more than 64 logical processors on Windows is now extended to all render engines
* It is now possible to render scenes without light sources (!)
* The use of more than 64 logical processors on Windows is now extended to all pre-processing tasks like caches, etc.

''Beta1 released''

''RC1 released''

### Fixed Bugs

* Fixed a rendering difference when using/not using geometry negative scale transformations (issue #309)
* Fixed an out of bound access in BAKECPU
* Fixed a problem when using path.forceblackbackground.enable and env. lights
* Fixed a problem with scenes with very hard light paths and Metropolis sampler (issue #312)
* Sampler shared data are now reseted at the end of a scene edit (issue #312)
* Fixed a problem in automatic cache radius estimation of PhotonGI when using Orthographic camera (issue #324)
* Fixed an OpenCL compilation error when using large number of objects on some old GPUs
* Fixed a problem with BlendLuxCore when parsing more than 9 image pipelines (#336)
* Fixed a bug causing fireflies when using light tracing for caustics in some case (#329)
* Fixed a crash when using RemoveUnusedTextures() with Volumes (issue #377)
* Fixed a banding problem when using sphere light sources with very small radius (issue LuxCoreRender/BlendLuxCore#477)
* Fixed LXS parsing of UV inlined coordinates (issue #392)

''Beta1 released''

* Fixed a bug when using RTPATHOCL with multiple CUDA devices
* Fixed a bug when using shadow transparency (for Path tracing)
* Fixed a LuxCoreUI crash when GPU rendering is not available (pull request #406)
* MacOS OpenCL/CUDA kernel cache directory is now created in user home directory to avoid to be erased when in /tmp
* Fixed the serialization of Intel OIDN plugin sharpness parameter
* Film NOISE channel (used for adaptive sampling) is now correctly reseted after a scene edit

''RC1 released''

Note: due to Glossycoating updated support for bump mapping on GPUs, some old scene using this kind of material/bump map combination may require some fix.

Check https://wiki.luxcorerender.org/LuxCoreRender_Release_Notes for the full list
of release notes.

### Known Problems and limitations

* accelerator.bvh.builder.type = EMBREE_MORTON doesn't work with the latest Embree
* Python crashes when calling sys.exit()
* TILEPATHOCL (and RTPATHOCL) count the layers of transparent surfaces as an iteration of the rendering finite state machine so they require to increase the max. path depth to avoid black regions.
* Light emitted by motion blurred triangle lights is approximated using the triangle area of time 0.0 (computing triangle area at runtime would be expansive) so it may be not totally accurate if the motion blur transformation include a scale.
* Variance clamping is not applied to AOVs

**Note for Windows users:** you have to install the [Microsoft Visual C++ Redistributable
for Visual Studio 2017](https://aka.ms/vs/15/release/vc_redist.x64.exe) and
[Intel C++ redistributable](https://software.intel.com/sites/default/files/managed/59/aa/ww_icl_redist_msi_2018.3.210.zip).
